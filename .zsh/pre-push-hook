#!/bin/zsh

#
# Parameterizable script for use as .git/hooks/pre-push
#
# Required env vars:
# * $VIRTUALENV - name of ~/.virtualenvs/ folder
#
# Optional env vars:
# * $ALT_VIRTUALENV - name of alternate virtualenv, if there is one. Triggers
#   another run of the test suite (& doctests) after activation.
# * $SKIP_BLACKEN - if set to any non empty value, skips the `inv blacken` step
# * $SKIP_LINT - if set to any non empty value, skips the flake8 step
# * $SKIP_TEST - if set, skips the test step
# * $SKIP_DOCS - if set, skips the docs-building step
# * $SKIP_DOCTESTS - if set, skips the docs site's doctest step
# * $DOC_TASK - if set, overrides doc build task from 'sites'

# Force use of a pty so this environment matches that of manual test/etc
# invocation, travis-ci, etc. Without it some pty-related tests are super
# fucky.
exec < /dev/tty
# Load our venv
source ~/.virtualenvs/${VIRTUALENV}/bin/activate
# TODO: update all projects to use pre-commit-hook for linting/blackening?
# TODO: ugh except that can take a good 3-4s a lot of the time on a MacBook
# non-Pro
# Blacken (black, but expects invoke task w/ some baked-in args)
# This comes first because it automatically solves most flake8 issues!
if [[ -z $SKIP_BLACKEN ]]; then
    if [[ $(inv --list | grep blacken) ]]; then
        # TODO: how to make this also ADD the changes to the index?
        # TODO: like, how do other precommit things such as gofmt do this?
        # TODO: I looked at "pre-commit" which black explicitly supports, but
        # it kinda-sorta does the same thing - it runs black, and notices black
        # made changes, and aborts the commit. Same result: my real changes are
        # stashed, the blackened changes are dirty, and I must manually git-add
        # and try committing again.
        inv blacken --check --diff 2>/dev/null || exit 1
    else
        echo "WARNING: you don't have 'inv blacken'; skipping"
    fi
fi
# Lint
if [[ -z $SKIP_LINT ]]; then
    flake8 || exit 1
fi
# Test
if [[ -z $SKIP_TEST ]]; then
    inv test || exit 1
fi
# Optionally test under alt Python
if [[ -n $ALT_VIRTUALENV ]]; then
    source ~/.virtualenvs/${ALT_VIRTUALENV}/bin/activate
    inv test || exit 1
fi
# Docs
if [[ -z $SKIP_DOCS ]]; then
    inv ${DOC_TASK-sites}|| exit 1
fi
# Doctests
if [[ -z $SKIP_DOCTESTS ]]; then
    inv www.doctest docs.doctest || exit 1
fi
