"
" Configuration for / override maps of, vimwiki
"

" Allow "normal" editor style tab/shift-tab indent/dedent. (Only in vimwiki
" buffers!)
let g:vimwiki_table_mappings = 0
autocmd FileType vimwiki map <buffer> <Tab> <Plug>VimwikiIncreaseLvlSingleItem
autocmd FileType vimwiki map <buffer> <S-Tab> <Plug>VimwikiDecreaseLvlSingleItem
" Not only do we want regular edit-style tab, but we also want it to be useful
" for completing the tag-based insert-completion when only one match is
" displayed.
" TODO: try making it useful even when >1 possible match has been narrowed down
autocmd FileType vimwiki imap <buffer> <expr> <Tab> pumvisible()
\    ? "\<C-N>\<C-Y>:"
\    : "\<Plug>VimwikiIncreaseLvlSingleItem"
autocmd FileType vimwiki imap <buffer> <S-Tab> <Plug>VimwikiDecreaseLvlSingleItem

" Use Markdown plz
let g:vimwiki_list = [{'path': '~/vimwiki', 'syntax': 'markdown', 'ext': '.md', 'auto_tags': 1}]

" Don't make temporary wikis out of other .md files tho...sheesh. (Among other
" things, this trips an auto-cd behavior I don't usually want.)
let g:vimwiki_global_ext = 0

" Allow 'gx' to open URLs (this technically works anywhere, not just in
" vimwiki) that include question marks, hashes etc. Note: cWORD not cword.
let g:netrw_gx = "<cWORD>"

" Override behavior of (not actual mapping for) hitting Return in list items.
" Specifically, change the 1st number from 1 to 3: Return always inserts a new
" line item. 2nd number (set to 5) stays same: Enter on empty list item deletes
" the list item.
" TODO: except...this is firing even when not in a list item (i.e. it makes new
" indented list items when mashing enter on an already blank line)! Clearly the
" default isn't doing that; figure out how.
"autocmd FileType vimwiki inoremap <buffer> <CR> <Esc>:VimwikiReturn 3 5<CR>

" Always 'cd' to vimwiki directory when opening vimwiki pages. This means git,
" search, etc should always 'just work'.
" TODO: if I start using subdirs, see whether this goes to wiki root or not...
let g:vimwiki_auto_chdir = 1

" Prevent saving wiki files that didn't get tags. So easy to forget!
function CheckForTags()
    try
        " Note: regexp here MUST be single-quoted to avoid slash problems
        if getbufline("", 1)[0] !~ ':.\+:'
            echoerr "Don't forget tags!!"
        endif
    endtry
endfunction
" TODO: make variable out of vimwiki root? used in 3x places now
autocmd BufWritePre ~/vimwiki/*.md call CheckForTags()

" Auto git commit/push on save for vimwiki files, every >=5min. Pauper's
" Evernote sync.
" TODO: this may or may not work w/ subdirs, forget exactly how pattern works
autocmd BufWritePost ~/vimwiki/*.md execute 'silent ! ~/bin/checkpoint'

" Explicit (save-and-)sync mapping, basically 'save harder'.
" NOTE: the output of <Leader>s (i.e. git add+commit) seems to be hidden almost
" instantly. Probably a good thing.
function SaveAndPush()
    " Make sure current page is written
    :w
    " Perform tag full-rebuild in case pages were deleted (ugh)
    " TODO: improve vimwiki's own page-deletion so it nukes just that page's
    " tags, and also works with markdown links heh
    :!rm .tags
    :VimwikiRebuildTags!
    " Make sure all files are added/committed, even if mtime<5min
    :!~/bin/checkpoint --force
    " Push to server. Use fugitive's push as it's more silent...meh
    :Gpush
endfunction
autocmd FileType vimwiki map <buffer> <Leader>ss :call SaveAndPush()<CR>

" Index page (holding all non-child pages) sorts contents before saving
autocmd BufWritePre ~/vimwiki/index.md 2,$sort i

" When hitting Enter on a tag omnicomplete menu, do what it's supposed to.
" Not sure what is preventing it from working as documented :(
autocmd FileType vimwiki imap <buffer> <expr> <CR> pumvisible()
\    ? "\<C-Y>:"
\    : "\<Esc>:VimwikiReturn 1 5<CR>"
